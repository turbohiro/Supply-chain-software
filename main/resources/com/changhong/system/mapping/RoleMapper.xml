<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.changhong.system.mapper.RoleMapper" >
  <resultMap id="BaseResultMap" type="com.changhong.system.model.Role" >
    <id column="Id" property="id" jdbcType="CHAR" />
    <result column="RoleName" property="rolename" jdbcType="VARCHAR" />
    <result column="RoleDesc" property="roledesc" jdbcType="VARCHAR" />
    <result column="Remark" property="remark" jdbcType="VARCHAR" />
    <result column="IsManager" property="ismanager" jdbcType="BIT" />
    <result column="SystemType" property="systemtype" jdbcType="VARCHAR" />
    <result column="CompanyCode" property="companycode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, RoleName, RoleDesc, Remark, IsManager, SystemType, CompanyCode
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_Role
    where Id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from SYS_Role
    where Id = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="com.changhong.system.model.Role" >
    insert into SYS_Role (Id, RoleName, RoleDesc, 
      Remark, IsManager, SystemType, 
      CompanyCode)
    values (#{id,jdbcType=CHAR}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{ismanager,jdbcType=BIT}, #{systemtype,jdbcType=VARCHAR}, 
      #{companycode,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.changhong.system.model.Role" >
    insert into SYS_Role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="rolename != null" >
        RoleName,
      </if>
      <if test="roledesc != null" >
        RoleDesc,
      </if>
      <if test="remark != null" >
        Remark,
      </if>
      <if test="ismanager != null" >
        IsManager,
      </if>
      <if test="systemtype != null" >
        SystemType,
      </if>
      <if test="companycode != null" >
        CompanyCode,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="rolename != null" >
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null" >
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ismanager != null" >
        #{ismanager,jdbcType=BIT},
      </if>
      <if test="systemtype != null" >
        #{systemtype,jdbcType=VARCHAR},
      </if>
      <if test="companycode != null" >
        #{companycode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.changhong.system.model.Role" >
    update SYS_Role
    <set >
      <if test="rolename != null" >
        RoleName = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null" >
        RoleDesc = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        Remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="ismanager != null" >
        IsManager = #{ismanager,jdbcType=BIT},
      </if>
      <if test="systemtype != null" >
        SystemType = #{systemtype,jdbcType=VARCHAR},
      </if>
      <if test="companycode != null" >
        CompanyCode = #{companycode,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.changhong.system.model.Role" >
    update SYS_Role
    set RoleName = #{rolename,jdbcType=VARCHAR},
      RoleDesc = #{roledesc,jdbcType=VARCHAR},
      Remark = #{remark,jdbcType=VARCHAR},
      IsManager = #{ismanager,jdbcType=BIT},
      SystemType = #{systemtype,jdbcType=VARCHAR},
      CompanyCode = #{companycode,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=CHAR}
  </update>
  
  <select id="queryAll" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from SYS_Role
    where RoleName like concat(concat('%',#{rolename,jdbcType=VARCHAR}),'%')
  </select>
  <select id="selectRolesByUserId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select r.ID,r.RoleName,r.RoleDesc from SYS_Role r where r.ID in(select er.RoleId from SYS_EmployeeRole er where er.EmpCode=#{empcode,jdbcType=VARCHAR})
  </select>    
  
</mapper>